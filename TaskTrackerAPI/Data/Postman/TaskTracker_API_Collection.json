{
	"info": {
		"_postman_id": "aa1234bb-cc56-dd78-ee90-ff1234567890",
		"name": "TaskTracker API",
		"description": "A comprehensive collection for the TaskTracker API, covering authentication, task management, categories, tags, and system monitoring endpoints.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"description": "Endpoints for user registration, login, and token management",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"Test@12345\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user in the system"
					}
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Test@12345\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Authenticate a user and receive access and refresh tokens"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Get a new access token using a refresh token"
					}
				}
			]
		},
		{
			"name": "Tasks",
			"description": "Endpoints for task management",
			"item": [
				{
					"name": "Get All Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Retrieve all tasks for the current user"
					}
				},
				{
					"name": "Create Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Task\",\n    \"description\": \"Task description goes here\",\n    \"dueDate\": \"2023-12-31T23:59:59Z\",\n    \"status\": \"NotStarted\",\n    \"priority\": \"Medium\",\n    \"categoryId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks"
							]
						},
						"description": "Create a new task"
					}
				},
				{
					"name": "Get Task by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Get a specific task by ID"
					}
				},
				{
					"name": "Update Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Updated Task Title\",\n    \"description\": \"Updated description\",\n    \"dueDate\": \"2023-12-31T23:59:59Z\",\n    \"status\": \"InProgress\",\n    \"priority\": \"High\",\n    \"categoryId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Update an existing task"
					}
				},
				{
					"name": "Delete Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"1"
							]
						},
						"description": "Delete a task by ID"
					}
				},
				{
					"name": "Tasks by Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/status/InProgress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"status",
								"InProgress"
							]
						},
						"description": "Get tasks filtered by status"
					}
				},
				{
					"name": "Tasks by Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/category/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"category",
								"1"
							]
						},
						"description": "Get tasks filtered by category ID"
					}
				},
				{
					"name": "Tasks by Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/tags/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"tags",
								"1"
							]
						},
						"description": "Get tasks filtered by tag ID"
					}
				},
				{
					"name": "Task Statistics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tasks/statistics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tasks",
								"statistics"
							]
						},
						"description": "Get task statistics for the current user"
					}
				}
			]
		},
		{
			"name": "Categories",
			"description": "Endpoints for category management",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Get all categories for the current user"
					}
				},
				{
					"name": "Create Category",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"New Category\",\n    \"color\": \"#FF5733\",\n    \"icon\": \"folder\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"categories"
							]
						},
						"description": "Create a new category"
					}
				}
			]
		},
		{
			"name": "Tags",
			"description": "Endpoints for tag management",
			"item": [
				{
					"name": "Get All Tags",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tags"
							]
						},
						"description": "Get all tags for the current user"
					}
				},
				{
					"name": "Create Tag",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Important\",\n    \"color\": \"#FF0000\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"tags"
							]
						},
						"description": "Create a new tag"
					}
				}
			]
		},
		{
			"name": "Health & Monitoring",
			"description": "System health check and monitoring endpoints",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						},
						"description": "Check if the API is healthy"
					}
				},
				{
					"name": "Detailed Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health",
								"details"
							]
						},
						"description": "Get detailed health information about the API and its components"
					}
				},
				{
					"name": "Database Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health/database",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health",
								"database"
							]
						},
						"description": "Check database connection health"
					}
				},
				{
					"name": "API Metrics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics/api",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics",
								"api"
							]
						},
						"description": "Get API usage metrics (admin only)"
					}
				},
				{
					"name": "Database Metrics",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/metrics/database",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"metrics",
								"database"
							]
						},
						"description": "Get database performance metrics (admin only)"
					}
				}
			]
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "Test Security Headers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Content-Security-Policy header exists\", function () {",
									"    pm.response.to.have.header(\"Content-Security-Policy\");",
									"});",
									"",
									"pm.test(\"X-Content-Type-Options header exists\", function () {",
									"    pm.response.to.have.header(\"X-Content-Type-Options\");",
									"});",
									"",
									"pm.test(\"X-Frame-Options header exists\", function () {",
									"    pm.response.to.have.header(\"X-Frame-Options\");",
									"});",
									"",
									"pm.test(\"Referrer-Policy header exists\", function () {",
									"    pm.response.to.have.header(\"Referrer-Policy\");",
									"});",
									"",
									"pm.test(\"Permissions-Policy header exists\", function () {",
									"    pm.response.to.have.header(\"Permissions-Policy\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Resource Ownership",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tasks/999999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tasks",
								"999999"
							]
						},
						"description": "This should return a 403 Forbidden if security is working correctly, since the user doesn't own task with ID 999999"
					},
					"response": []
				},
				{
					"name": "Test Rate Limiting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Check for rate limit headers",
									"pm.test(\"Rate limit headers exist\", function () {",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"health"
							]
						}
					},
					"response": []
				}
			],
			"description": "Tests for the new security features implemented in Day 32"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-save tokens from login responses",
					"if (pm.response.code === 200 && pm.request.url.toString().includes('/api/auth/login')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.data && responseJson.data.tokens) {",
					"        pm.environment.set('accessToken', responseJson.data.tokens.accessToken);",
					"        pm.environment.set('refreshToken', responseJson.data.tokens.refreshToken);",
					"        console.log('Tokens saved to environment variables');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:5001",
			"type": "string"
		}
	]
} 